#Brute Force App
Tc=O(2n)
Sc=O(n)

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return None
        stack = []
        curr = head
        while curr:
            stack.append(curr)
            curr = curr.next
        new_head = stack.pop()
        curr = new_head
        while stack:
            node = stack.pop()
            curr.next = node
            curr = curr.next

        curr.next = None
        return new_head

Optimal Solution

Tc:O(n)
Sc:O(1)

class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        prev = None
        curr = head
        while curr:
            next_node = curr.next
            curr.next = prev
            prev = curr
            curr = next_node
        return prev

        