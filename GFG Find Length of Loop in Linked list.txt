#Brute Force App Method 1
#TC=O(n) and SC=O(n)

Code:

class Solution:
   
    def countNodesInLoop(self, head):
        visited = set()
        current = head

        while current:
            if current in visited:
                
                start = current
                count = 1
                current = current.next
                while current != start:
                    current = current.next
                    count += 1
                return count
            visited.add(current)
            current = current.next

        return 0 

#Brute Force App Method 2
#TC=O(n) and SC=O(n)


Code:

class Solution:
    def countNodesInLoop(self, head):
        node_step = {}
        current = head
        step = 1

        while current:
            if current in node_step:
                return step - node_step[current]
            node_step[current] = step
            current = current.next
            step += 1

        return 0


#Optimal App
#TC=O(n) and SC=O(1)

Code: 

class Solution:
    def countNodesInLoop(self, head):
        fast=head
        slow=head
        
        while fast and fast.next:
            slow=slow.next
            fast=fast.next.next
            if slow == fast:
                count=1
                fast=fast.next
                while slow != fast:
                    count += 1
                    fast=fast.next
                return count
        return 0

